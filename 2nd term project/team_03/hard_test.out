vtype int
id main
lparen (
vtype char
id c
comma ,
vtype int
id d
rparen )
lbrace {
vtype int
id a
semi ;
vtype INT
id b
semi ;
vtype char
id c
semi ;
vtype int
id d
assign =
num 3
semi ;
if IF
lparen (
id a
comp ==
num -1
rparen )
lbrace {
id c
assign =
literal a
semi ;
rbrace }
else else
if if
lparen (
id a
comp !=
num 45
rparen )
lbrace {
id b
assign =
num -3
semi ;
rbrace }
else else
if if
lparen (
id a
comp <=
num 734
rparen )
lbrace {
id b
assign =
id b
addsub -
num 3
semi ;
rbrace }
else else
if if
lparen (
id a
comp >=
num 457
rparen )
lbrace {
vtype CHAR
id if023
assign =
literal hello world
semi ;
rbrace }
else else
if if
lparen (
id a
comp <
num -245
rparen )
lbrace {
id a
assign =
id a
addsub +
num -1
semi ;
rbrace }
else else
if if
lparen (
id a
comp >
num -3421445
rparen )
lbrace {
id a
assign =
id a
addsub -
num 1
semi ;
rbrace }
else else
if if
lparen (
id a
comp !=
num -500
rparen )
lbrace {
id c
assign =
literal  
rbrace }
else ELSE
lbrace {
while while
lparen (
id a
comp !=
num 2
rparen )
lbrace {
id a
assign =
id a
addsub -
num -2
semi ;
rbrace }
rbrace }
while WHILE
lparen (
id a
multdiv /
num 32
comp ==
num 2
rparen )
lbrace {
id a
assign =
id a
multdiv *
num 2
semi ;
rbrace }
vtype int
num 0
id abc0
semi ;
vtype int
num 123
if if
semi ;
vtype int
num 123
id if0
semi ;
id k
assign =
num 123
id if0
vtype int
id j
assign =
num 2
semi ;
id j
addsub -
num -23
return return
addsub -
num 0
semi ;
rbrace }
