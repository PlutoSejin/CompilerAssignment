VTYPE int
ID main
LPAREN (
VTYPE char
ID c
COMMA ,
VTYPE int
ID d
RPAREN )
LBRACE {
VTYPE int
ID a
SEMI ;
VTYPE INT
ID b
SEMI ;
VTYPE char
ID c
SEMI ;
VTYPE int
ID d
ASSIGN =
INTEGER 3
SEMI ;
IF IF
LPAREN (
ID a
COMPARISON ==
INTEGER -1
RPAREN )
LBRACE {
ID c
ASSIGN =
STRING a
SEMI ;
RBRACE }
ELSE else
IF if
LPAREN (
ID a
COMPARISON !=
INTEGER 45
RPAREN )
LBRACE {
ID b
ASSIGN =
INTEGER -3
SEMI ;
RBRACE }
ELSE else
IF if
LPAREN (
ID a
COMPARISON <=
INTEGER 734
RPAREN )
LBRACE {
ID b
ASSIGN =
ID b
OPERATOR -
INTEGER 3
SEMI ;
RBRACE }
ELSE else
IF if
LPAREN (
ID a
COMPARISON >=
INTEGER 457
RPAREN )
LBRACE {
VTYPE CHAR
ID if023
ASSIGN =
STRING hello world
SEMI ;
RBRACE }
ELSE else
IF if
LPAREN (
ID a
COMPARISON <
INTEGER -245
RPAREN )
LBRACE {
ID a
ASSIGN =
ID a
OPERATOR +
INTEGER -1
SEMI ;
RBRACE }
ELSE else
IF if
LPAREN (
ID a
COMPARISON >
INTEGER -3421445
RPAREN )
LBRACE {
ID a
ASSIGN =
ID a
OPERATOR -
INTEGER 1
SEMI ;
RBRACE }
ELSE else
IF if
LPAREN (
ID a
COMPARISON !=
INTEGER -500
RPAREN )
LBRACE {
ID c
ASSIGN =
STRING  
RBRACE }
ELSE ELSE
LBRACE {
WHILE while
LPAREN (
ID a
COMPARISON !=
INTEGER 2
RPAREN )
LBRACE {
ID a
ASSIGN =
ID a
OPERATOR -
INTEGER -2
SEMI ;
RBRACE }
RBRACE }
WHILE WHILE
LPAREN (
ID a
OPERATOR /
INTEGER 32
COMPARISON ==
INTEGER 2
RPAREN )
LBRACE {
ID a
ASSIGN =
ID a
OPERATOR *
INTEGER 2
SEMI ;
RBRACE }
VTYPE int
INTEGER 0
ID abc0
SEMI ;
VTYPE int
INTEGER 123
IF if
SEMI ;
VTYPE int
INTEGER 123
ID if0
SEMI ;
ID k
ASSIGN =
INTEGER 123
ID if0
VTYPE int
ID j
ASSIGN =
INTEGER 2
SEMI ;
ID j
OPERATOR -
INTEGER -23
RETURN return
OPERATOR -
INTEGER 0
SEMI ;
RBRACE }
