id void
id main
lparen (
rparen )
lbrace {
variable type int
id a
assign =
num 1
semicolon ;
variable type int
id buf
assign =
num 0
semicolon ;
variable type int
id buf2
assign =
num 0
semicolon ;
if if
lparen (
id a
rparen )
lbrace {
rbrace }
if if
lparen (
id a
rparen )
lbrace {
rbrace }
if if
lparen (
id a
rparen )
lbrace {
rbrace }
if if
lparen (
id a
rparen )
lbrace {
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
else else
lbrace {
id buf2
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
else else
lbrace {
id buf2
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
else else
lbrace {
id buf2
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
else else
lbrace {
id buf2
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
else else
if if
lbrace {
id buf2
operator +
operator +
semicolon ;
rbrace }
else else
lbrace {
id buf2
operator +
operator +
semicolon ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
operator +
operator +
semicolon ;
rbrace }
else else
if if
lbrace {
id buf2
operator +
operator +
semicolon ;
rbrace }
else else
lbrace {
id buf2
operator +
operator +
semicolon ;
rbrace }
rbrace }
