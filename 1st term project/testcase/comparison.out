id void
id main
lparen (
rparen )
lbrace {
variable type int
id a
assign =
num 0
semicolon ;
variable type int
id b
assign =
num 5
semicolon ;
variable type char
id c
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison <
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison >
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison ==
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison !=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison <=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
id c
assign =
id i
comparison >=
assign =
id j
semicolon ;
rbrace }
